# Default values for mychart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Where do we get the trained model and asset database from?
modelLocation: 'https://drive.google.com/file/d/1KpS7sG8BeTD_RoRan6N-O4eKBh91sSw9' 
assetDBLocation: 'https://drive.google.com/file/d/1x9iVV_4qrHNBwt_YhUhOFdrBlLo7oxL6'

# How many copies of the service should be run?
replicaCount: 1


# Get the pre-built container image from DockerHub
image:
  repository: terrierteam/infinitech_far_fe
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.0.0" 

# No security needed for download
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# We want the API to be accessable
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# You need to enable this if you want an external end-point outside the cluster
# for this service. You also need to enter a valid host address for this based
# on your cluster configuration.
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - paths:
        - path: /
          pathType: ImplementationSpecific
      #host: <Enter the hostname for external access to the service>
  tls: []

service:
  type: ClusterIP
  port: 80



resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
